class Solution {
public:
    bool isHappy(int n) {
        
        int digitSum = n;
        while(digitSum>9){
            int currentSum = 0;
            while(digitSum != 0){
                currentSum += (digitSum%10) * (digitSum%10);
                digitSum /= 10;
            }
            digitSum = currentSum;
        }

        if(digitSum == 1 || digitSum == 7)
            return true;
        else
            return false;
    }
};

/* Problem Statement
Write an algorithm to determine if a number n is happy.

A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.
*/

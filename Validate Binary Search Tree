/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   long int largest = LONG_MIN;
    
    bool isValidBST(TreeNode* root) {

        if(! root)
            return true;
         
         bool leftSubTree = isValidBST(root->left);

        if(root->val > largest)
            largest = root->val;
        else    
            return false;
        
        return leftSubTree && isValidBST(root->right);

            
    }
};

/* Problem Statement

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        int len = prices.size();
        int maxProfit = 0;
        int minBuying = prices[0];

        for(int i=0; i<len; i++){
            if(prices[i] < minBuying)
                minBuying = prices[i];
            
            if(prices[i] - minBuying > maxProfit)   
                maxProfit = prices[i] - minBuying;
           
        }

        return maxProfit;

    }
};

/* Problem statement
You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.
 */

class Solution {
public:
    bool isSubsequence(string s, string t) {
        queue<char> subSeq;

        for(int i=0; i<s.length(); i++){
            subSeq.push(s[i]);
        }

        for(int i=0; i<t.length(); i++){
            if(subSeq.empty())
                return true;
            if(t[i] == subSeq.front())
                subSeq.pop();
        }
        if(subSeq.empty())
            return true;

        return false;
    }
};

/* Problem Statement
Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).
*/
